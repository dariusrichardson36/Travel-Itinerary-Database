-- View 1. Retrieve all the restaurants in New York City, NY, United States.
CREATE VIEW RESTAURANTS_IN_NYC AS
SELECT R.`NAME` AS 'RESTAURANT NAME', STREET_NUMBER, STREET_NAME, CITY_NAME, STATE_NAME, COUNTRY_NAME, ZIP_CODE
FROM RESTAURANT R INNER JOIN TRAVEL_ATTRACTION T ON R.`NAME` = T.`NAME`
WHERE CITY_NAME = 'New York City';

SELECT *
FROM RESTAURANTS_IN_NYC;

-- View 2. Retrieve countries and the members who have visited them.
CREATE VIEW COUNTRIES_AND_MEMBERS_VISITED AS
SELECT A.COUNTRY_NAME, P.USERNAME AS 'MEMBER USERNAME'
FROM TRAVEL_ATTRACTION A INNER JOIN TRIP_PLAN_ATTRACTIONS T ON A.`NAME` = T.ATTRACTION
						 JOIN TRIP_PLAN P ON T.PLANID = P.PLANID
ORDER BY COUNTRY_NAME; 

SELECT *
FROM COUNTRIES_AND_MEMBERS_VISITED;

-- View 3. Retrieve itineraries to France.
CREATE VIEW FRANCE_ITINERARIES AS
SELECT P.PLANID, P.`NAME` AS 'TRIP PLAN NAME', CITY_NAME, STATE_NAME, COUNTRY_NAME, ZIP_CODE 
FROM TRIP_PLAN P INNER JOIN TRIP_PLAN_ATTRACTIONS T ON P.PLANID = T.PLANID
				 JOIN TRAVEL_ATTRACTION A ON T.ATTRACTION = A.`NAME`
WHERE COUNTRY_NAME = 'France';

SELECT *
FROM FRANCE_ITINERARIES;
             
-- View 4. Retrieve the country(s) visited by whom also visits/visited the US on the same trip (within 15 days).
CREATE VIEW COUNTRIES_VISITED AS
SELECT DISTINCT tp.USERNAME, tp.PLANID, tp.START_DATE_TIME, tp.END_DATE_TIME, ta.COUNTRY_NAME AS 'Visited Country'
FROM TRIP_PLAN tp
JOIN TRIP_PLAN_ATTRACTIONS tpa ON tp.PLANID = tpa.PLANID
JOIN TRAVEL_ATTRACTION ta ON tpa.ATTRACTION_NAME = ta.`NAME` AND ta.COUNTRY_NAME <> 'United States'
WHERE EXISTS (
    SELECT 1
    FROM TRIP_PLAN tp2
    JOIN TRIP_PLAN_ATTRACTIONS tpa2 ON tp2.PLANID = tpa2.PLANID
    JOIN TRAVEL_ATTRACTION ta2 ON tpa2.ATTRACTION_NAME = ta2.`NAME`
    WHERE tp2.USERNAME = tp.USERNAME
    AND ta2.COUNTRY_NAME <> 'United States' AND tp2.PLANID <> tp.PLANID
    AND ABS(DATEDIFF(tp.START_DATE_TIME, tp.END_DATE_TIME)) <= 15
);

SELECT *
FROM COUNTRIES_VISITED;